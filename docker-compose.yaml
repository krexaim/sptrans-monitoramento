services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  minio:
    image:  quay.io/minio/minio:RELEASE.2025-02-28T09-55-16Z
    container_name: minio
    entrypoint: sh
    command: >
      -c 'mkdir -p /minio_data/bronze &&
          mkdir -p /minio_data/silver &&
          mkdir -p /minio_data/gold &&
          minio server /minio_data --console-address ":9001"'
    ports:
      - "9000:9000" # API
      - "9001:9001" # Web console
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes: 
      - ./data/minio:/minio_data
  # mc:
  #   image: minio/mc:RELEASE.2025-04-08T15-39-49Z
  #   container_name: mc
  #   depends_on:
  #     - minio
  #   entrypoint: >
  #     /bin/sh -c ""
      
  airflow:
   image: apache/airflow:2.10.2-python3.11
   container_name: airflow
   depends_on:
     postgres:
       condition: service_healthy
     minio:
       condition: service_started
   environment:
     AIRFLOW__CORE__EXECUTOR: LocalExecutor
     AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
     AIRFLOW__CORE__LOAD_EXAMPLES: "false"
     AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: "True"
     AIRFLOW_ENV: docker
   ports:
     - "8080:8080"
   volumes:
     - ./dags:/opt/airflow/dags
     - ./airflow/plugins:/opt/airflow/plugins
     - ./airflow/config/airflow.cfg:/opt/airflow/airflow.cfg
     - ./requirements.txt:/requirements.txt
     - ./.env:/opt/airflow/.env
   command: >
     bash -c "
     pip install --no-cache-dir -r /requirements.txt &&
     airflow db init &&
     airflow users create --username admin --firstname admin --lastname admin --role Admin --email admin@example.com --password admin &&
     airflow standalone
     "
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
     interval: 30s
     timeout: 10s
     retries: 5
   restart: always

  spark:
    platform: linux/amd64
    image: fjardim/mds-spark
    hostname: spark
    container_name: spark
    command:
      - /bin/sh
      - -c
      - |
        /usr/local/spark/sbin/start-master.sh
        start-notebook.sh --NotebookApp.token=''
    ports:
      - 8889:8888
      - 4040:4040
      - 4041:4041
      - 4042:4042
      - 4043:4043
      - 8180:8080
      - 7077:7077
    env_file:
      - .env
    volumes:
      - ./spark/util:/util/
      - ./spark/work/.notebooks/:/home/user/work/
      - ./spark/env:/env